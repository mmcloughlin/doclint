import os
import subprocess
import argparse


def get_resource_dir():
    cxx = os.path.join(os.environ['LLVM_DIR'], 'bin', 'clang++')
    return subprocess.check_output([cxx, '-print-resource-dir']).strip()


def generate_header(config, prefix=''):
    print '// Generated by {filename}. DO NOT EDIT.'.format(
        filename=os.path.basename(__file__))
    print
    print '#pragma once'
    print
    for key, value in config:
        print '#define {prefix}{key}\t"{value}"'.format(
            prefix=prefix,
            key=key,
            value=value,
        )


def main():
    parser = argparse.ArgumentParser(
        description='Generate config header file.')
    parser.add_argument('--prefix', default='', help='Macro prefix.')
    args = parser.parse_args()

    config = [
        ('RESOURCE_DIR', get_resource_dir()),
    ]
    generate_header(config, prefix=args.prefix)
    return


if __name__ == '__main__':
    main()
